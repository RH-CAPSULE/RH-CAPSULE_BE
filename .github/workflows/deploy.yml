name: Build and Deploy to K8s

on:
  push:
    branches:
      - main   # main 브랜치 push 시 실행

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. JDK 세팅 (Spring 빌드)
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. application.yml 주입 (GitHub Secrets → 빌드에만 사용)
      - name: Create application.yml from Secret
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.SPRING_APPLICATION_YML }}" > src/main/resources/application.yml

      # 4. Gradle 빌드
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # 5. Docker Hub 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # 6. 멀티 아키텍처 이미지 빌드 & 푸시
      - name: Build and push Docker image (multi-arch)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            dhxxn/rh_capsule:latest
            dhxxn/rh_capsule:${{ github.sha }}
          platforms: linux/amd64,linux/arm64

      # 7. GitOps repo 업데이트 (deployment.yaml 이미지 태그 갱신)
      - name: Checkout GitOps repo
        uses: actions/checkout@v2
        with:
          repository: eraser502/gitops-repo   # GitOps repo 주소
          token: ${{ secrets.GH_PAT }}

      - name: Update image in deployment.yaml
        run: |
          sed -i "s|dhxxn/rh_capsule:.*|dhxxn/rh_capsule:${{ github.sha }}|" apps/time-capsule/deployment.yaml
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add apps/time-capsule/deployment.yaml
          git commit -m "Update time-capsule image to ${{ github.sha }}" || echo "No changes to commit"
          git push
